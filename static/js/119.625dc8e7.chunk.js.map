{"version":3,"file":"static/js/119.625dc8e7.chunk.js","mappings":"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","sources":["components/ModalErrorLogin/ModalErrorLogin.styled.js","components/ModalErrorLogin/ModalErrorLogin.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","utils/schemas/logInSchema.js","pages/Login/Login.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Section = styled.div`\n  width: 100%;\n  height: 287px;\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    height: 354px;\n  }\n`;\n\nexport const Container = styled.div`\n  gap: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n  }\n`;\n\nexport const Header = styled.p`\n  color: var(--primary-text-color);\n  font-weight: 500;\n  font-size: 24px;\n  /* margin-bottom: 24px; */\n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    /* margin-bottom: 52px; */\n  }\n`;\n\nexport const Text = styled.p`\n  color: var(--primary-text-color);\n  font-weight: 500;\n  font-size: 16px;\n  /* margin-bottom: 40px; */\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    /* margin-bottom: 60px; */\n  }\n`;\n\nexport const Btn = styled(Link)`\n  text-decoration: none;\n  box-sizing: border-box;\n  text-align: center;\n\n  width: 248px;\n  height: 40px;\n  cursor: pointer;\n  padding: 8px 0px;\n\n  color: var(--label-active-color);\n  font-weight: 700;\n  font-size: 16px;\n\n  background: var(--btn-bg-color);\n  border: none;\n  border-radius: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n\n  transition: background var(--duration) var(--cubic);\n\n  &:hover,\n  &:focus {\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n\n  & svg {\n    fill: var(--label-active-color);\n  }\n`;\n","import React from 'react';\nimport errorLogin from 'assets/images/errorpage/error.png';\n\nimport {\n  Section,\n  Container,\n  Header,\n  Text,\n  Btn,\n} from './ModalErrorLogin.styled';\n\nexport const ModalErrorLogin = ({ onClose }) => {\n  return (\n    <Section>\n      <Container>\n        <img src={errorLogin} alt=\"\" width=\"50\" />\n        <Header>Opps... devil animals!!!</Header>\n        <Text>There was an error with your login credentials.</Text>\n        <Btn onClick={onClose}>Close</Btn>\n      </Container>\n    </Section>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Div = styled.div`\n  margin: 0 auto;\n  margin-top: 44px;\n  background-color: var(--label-active-color);\n  border: 1px solid var(--btn-bg-color);\n  box-shadow: rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n  margin-bottom: 100px;\n  box-sizing: border-box;\n\n  width: 280px;\n  padding: 40px 12px;\n\n  h1 {\n    font-family: Manrope;\n    font-size: 24px;\n    font-weight: 500;\n    text-align: center;\n    margin: 0;\n    margin-bottom: 40px;\n  }\n  p {\n    font-family: Manrope;\n    font-weight: 400;\n    font-size: 12px;\n    color: var(--text-input-color);\n    text-align: center;\n  }\n\n  a {\n    font-size: 12px;\n    color: var(--btn-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 75px;\n    margin-top: 80px;\n\n    h1 {\n      font-family: Manrope;\n      font-size: 36px;\n      font-weight: 500;\n      text-align: center;\n      margin: 0;\n      margin-bottom: 40px;\n    }\n\n    p {\n      font-family: Manrope;\n      font-weight: 400;\n      font-size: 12px;\n      color: var(--text-input-color);\n      text-align: center;\n    }\n\n    a {\n      font-size: 12px;\n      color: var(--btn-bg-color);\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 608px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  :not(:last-child) {\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    :not(:last-child) {\n      margin-bottom: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    :not(:last-child) {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const Icon = styled.span`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  right: 12px;\n  top: 12px;\n  color: ${({ passwordValue }) =>\n    passwordValue ? 'var(--text-input-color)' : 'var(--btn-bg-color)'};\n\n  cursor: pointer;\n  transform: ${({ passwordValue }) =>\n    passwordValue ? 'translateX(-27px)' : 'none'};\n  transition: transform var(--duration) var(--cubic);\n`;\n\nexport const IconValid = styled.span`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  right: 17px;\n  top: 15px;\n  color: ${({ error, valid }) =>\n    error\n      ? 'var(--error-color)'\n      : valid\n      ? 'var(--success-color)'\n      : 'var(--btn-bg-color)'};\n  transition: var(--duration);\n  opacity: ${({ passwordValue }) => (passwordValue ? 1 : 0)};\n`;\n\nexport const InputLine = styled(Field)`\n  font-family: Manrope;\n  position: relative;\n  color: var(--text-input-color);\n  font-size: 16px;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid\n    ${({ error, value }) =>\n      error\n        ? 'var(--error-color)'\n        : value\n        ? 'var(--success-color)'\n        : 'var(--btn-bg-color)'};\n  border-radius: 40px;\n  box-sizing: border-box;\n\n  :focus {\n    outline: 0;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const Btn = styled.button`\n  width: 100%;\n  height: auto;\n  padding: 10px 28px;\n\n  border: none;\n  border-radius: 40px;\n  font-size: 20px;\n  color: #fff;\n  cursor: pointer;\n  background: var(--btn-bg-color);\n  translate: 0 0;\n\n  ::before {\n    box-sizing: border-box;\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n    border-radius: 40px;\n    opacity: 0;\n    z-index: -1;\n    transition: opacity var(--duration) var(--cubic);\n  }\n\n  :hover {\n    background: linear-gradient(\n      245deg,\n      rgba(65, 158, 241, 1) 30%,\n      rgba(155, 208, 255, 1)\n    );\n    background-position: 100% 50%;\n  }\n\n  margin-top: 56px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 28px;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 28px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  font-size: 12px;\n  font-weight: 400;\n  margin-top: 4px;\n  margin-left: 16px;\n`;\n\nexport const IconEmail = styled.span`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  right: -23px;\n  color: ${({ emailValue }) =>\n    emailValue ? 'var(--text-input-color)' : 'var(--btn-bg-color)'};\n  transform: ${({ emailValue }) => (emailValue ? 'translateX(-27px)' : 'none')};\n  transition: transform var(--duration) var(--cubic);\n`;\n","import React, { useState } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport {\n  MdOutlineVisibilityOff,\n  MdOutlineVisibility,\n  MdOutlineDone,\n} from 'react-icons/md';\nimport { RxCross2 } from 'react-icons/rx';\n\nimport {\n  Div,\n  StyledForm,\n  InputLine,\n  InputContainer,\n  Icon,\n  IconValid,\n  IconEmail,\n  Btn,\n  Error,\n} from './LoginForm.styled';\n\nconst LoginForm = ({ values, errors, touched }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const formik = useFormikContext();\n  const validPassword = formik.touched.password && !formik.errors.password;\n\n  const validateIcon = (touched, errors, values, fieldName) => {\n    const valid = touched[fieldName] && !errors[fieldName];\n\n    if (touched[fieldName] && errors[fieldName]) {\n      return (\n        <IconValid valid={false} passwordValue={password.length}>\n          <RxCross2 style={{ color: 'rgba(255, 99, 71, 1)' }} />\n        </IconValid>\n      );\n    } else if (valid) {\n      return (\n        <IconValid valid passwordValue={password.length}>\n          <MdOutlineDone />\n        </IconValid>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const onEmailChange = e => {\n    const emailValue = e.target.value;\n    setEmail(emailValue);\n    formik.setFieldValue('email', emailValue);\n  };\n\n  const onPasswordChange = e => {\n    const passwordValue = e.target.value;\n    setPassword(passwordValue);\n    formik.setFieldValue('password', passwordValue);\n  };\n\n  return (\n    <>\n      <Div>\n        <h1>Login</h1>\n\n        <StyledForm>\n          <InputContainer>\n            <InputLine\n              id=\"email\"\n              placeholder=\"Email\"\n              variant=\"outlined\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"off\"\n              required\n              onChange={onEmailChange}\n              value={email}\n              error={formik.touched.email && formik.errors.email}\n            />\n            <IconEmail emailValue={email.length}>\n              {formik.touched.email && formik.errors.email ? (\n                <IconValid valid={false} passwordValue={email.length}>\n                  <RxCross2 style={{ color: 'rgba(255, 99, 71, 1)' }} />\n                </IconValid>\n              ) : (\n                <IconValid valid passwordValue={email.length}>\n                  <MdOutlineDone />\n                </IconValid>\n              )}\n            </IconEmail>\n            <Error name=\"email\" component=\"span\" />\n          </InputContainer>\n\n          <InputContainer>\n            <InputLine\n              id=\"password\"\n              placeholder=\"Password\"\n              variant=\"outlined\"\n              name=\"password\"\n              autoComplete=\"off\"\n              type={showPassword ? 'text' : 'password'}\n              required\n              onChange={onPasswordChange}\n              value={password}\n              error={formik.touched.password && formik.errors.password}\n            />\n            <Icon\n              onClick={togglePasswordVisibility}\n              style={{\n                width: '24px',\n                height: '24px',\n              }}\n              passwordValue={password}\n              error={formik.touched.password && formik.errors.password}\n              valid={validPassword}\n            >\n              {showPassword ? (\n                <MdOutlineVisibility />\n              ) : (\n                <MdOutlineVisibilityOff />\n              )}\n            </Icon>\n            {validateIcon(\n              formik.touched,\n              formik.errors,\n              formik.values,\n              'password'\n            )}\n            <Error name=\"password\" component=\"span\" />\n          </InputContainer>\n          <Btn type=\"submit\">Login</Btn>\n        </StyledForm>\n        <p>\n          Don't have an account? <a href=\"/YourPet/register\">Register</a>\n        </p>\n      </Div>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import * as Yup from 'yup';\n\n\n\nconst validationLogInSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().min(8, 'Password must be at least 8 characters').required('Required'),\n});\n  \n\nexport default validationLogInSchema;","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError } from 'redux/auth/authSelectors';\nimport { logIn } from 'redux/auth/authOperations';\n\nimport { ModalErrorLogin } from 'components/ModalErrorLogin/ModalErrorLogin';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport Backdrop from 'components/Backdrop/Backdrop';\n\nimport validationLogInSchema from 'utils/schemas/logInSchema';\n\nconst Login = () => {\n  const [isErrorModalOpen, setIsErrorModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const err = useSelector(selectError);\n\n  useEffect(() => {\n    if (err) {\n      setIsErrorModalOpen(true);\n    }\n  }, [err]);\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    const { email, password } = values;\n    dispatch(logIn({ email, password }));\n    setSubmitting(false);\n  };\n\n  const closeErrorModal = () => {\n    setIsErrorModalOpen(false);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={validationLogInSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, errors, touched, handleSubmit }) => (\n          <LoginForm\n            values={values}\n            errors={errors}\n            touched={touched}\n            onSubmit={handleSubmit}\n          />\n        )}\n      </Formik>\n      {isErrorModalOpen && (\n        <Backdrop closeModal={closeErrorModal}>\n          <ModalErrorLogin onClose={closeErrorModal} />\n        </Backdrop>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Header","_templateObject3","Text","_templateObject4","Btn","Link","_templateObject5","ModalErrorLogin","_ref","onClose","_jsx","children","_jsxs","src","errorLogin","alt","width","onClick","Div","InputContainer","Icon","passwordValue","_ref2","IconValid","_ref3","error","valid","_ref4","InputLine","Field","_ref5","value","StyledForm","Form","_templateObject6","_templateObject7","Error","ErrorMessage","_templateObject8","IconEmail","_templateObject9","_ref6","emailValue","_ref7","values","errors","touched","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","formik","useFormikContext","validPassword","_Fragment","id","placeholder","variant","name","type","autoComplete","required","onChange","e","target","setFieldValue","length","RxCross2","style","color","MdOutlineDone","component","prevShowPassword","height","MdOutlineVisibility","MdOutlineVisibilityOff","fieldName","validateIcon","href","Yup","min","isErrorModalOpen","setIsErrorModalOpen","dispatch","useDispatch","err","useSelector","selectError","useEffect","closeErrorModal","Formik","initialValues","validationSchema","validationLogInSchema","onSubmit","setSubmitting","resetForm","logIn","handleSubmit","LoginForm","Backdrop","closeModal"],"sourceRoot":""}