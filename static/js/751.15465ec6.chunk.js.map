{"version":3,"file":"static/js/751.15465ec6.chunk.js","mappings":"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","sources":["components/AddPetButton/AddPetButton.styled.js","components/AddPetButton/AddPetButton.jsx","components/NoticesCategoriesNav/filtersData.js","components/NoticesCategoriesNav/NoticesCategoriesNav.styled.js","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","components/Filters/Filters.styled.js","components/FiltersByAge/FiltersByAge.styled.js","components/FiltersByAge/FiltersByAge.jsx","components/FiltersByGender/FiltersByGender.jsx","components/Filters/Filters.jsx","components/NoticesFilters/NoticesFilters.styled.js","components/NoticesFilters/NoticesFilters.jsx","components/NoticesSearch/NoticesSearch.styled.js","components/NoticesSearch/NoticesSearch.jsx","pages/Notices/Notices.styled.js","pages/Notices/Notices.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nimport { BsPlus, BsPlusLg } from 'react-icons/bs';\n\nconst Btn = styled(Link)`\n  text-decoration: none;\n  box-sizing: border-box;\n\n  position: fixed;\n  top: 420px;\n  right: 5px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n\n  color: #ffffff;\n  font-weight: 600;\n\n  width: 80px;\n  height: 80px;\n  padding: 20px 17px;\n  // padding-top: 20px;\n  // padding-right: 17px;\n  // padding-bottom: 16px;\n  // padding-left: 18px;\n\n  font-size: 12px;\n  color: #fff;\n\n  background: var(--btn-bg-color);\n  border: none;\n  border-radius: 40px;\n  box-shadow: 3px 8px 14px 0px #88c6fd30;\n\n  z-index: 1;\n\n  transition: background var(--duration) var(--cubic);\n\n  &:hover,\n  &:focus {\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    position: static;\n    translate: 0 0;\n\n    gap: 8px;\n\n    width: 129px;\n    height: 40px;\n    padding: 8px 18px;\n    border-radius: 40px;\n\n    font-size: 16px;\n  }\n`;\n\nconst PlusIcon = styled(BsPlusLg)`\n  width: 24px;\n  height: 24px;\n  color: #ffffff;\n`;\n\nconst PlusIconSmall = styled(BsPlus)`\n  width: 24px;\n  height: 24px;\n  color: #ffffff;\n`;\n\nexport { Btn, PlusIcon, PlusIconSmall };\n","import React from 'react';\nimport { useWindowSize } from 'hooks/useResize';\n\nimport { Btn, PlusIconSmall, PlusIcon } from './AddPetButton.styled';\n\nconst AddPetButton = ({ text, path, onClick }) => {\n  const [screenWidth] = useWindowSize();\n\n  return (\n    <Btn to={path} onClick={onClick}>\n      {screenWidth < 768 && <PlusIcon />}\n      {text}\n      {screenWidth >= 768 && <PlusIconSmall />}\n    </Btn>\n  );\n};\n\nexport default AddPetButton;\n","export const filters = [\n  { filter: 'sell', path: 'sell' },\n  { filter: 'lost/found', path: 'lost-found' },\n  { filter: 'in good hands', path: 'for-free' },\n  { filter: 'favorite ads', path: 'favorite' },\n  { filter: 'my ads', path: 'my-pets' },\n];\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst Btn = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  color: inherit;\n\n  position: relative;\n\n  padding: 8px 16px;\n\n  color: var(--btn-bg-color);\n  font-weight: 500;\n\n  background: var(--labels-bg-color);\n  border: none;\n  border-radius: 40px;\n\n  transition: color var(--duration) var(--cubic),\n    background var(--duration) var(--cubic);\n\n  &:hover,\n  &:focus {\n    color: var(--label-active-color);\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n\n  &.active {\n    color: #fef9f9;\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n\n  padding: 0;\n  list-style: none;\n  margin: 0;\n\n  @media screen and (min-width: 768px) {\n    gap: 12px;\n  }\n`;\n\nexport { Btn, List };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { filters } from './filtersData';\n\nimport { Btn, List } from './NoticesCategoriesNav.styled';\n\nconst NoticesCategoriesNav = ({ onFilterChange }) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const handleFilterChange = (option) => {\n    onFilterChange(option);\n  };\n\n  const items = filters.map(({ filter, path }, el) => {\n    if (!isLoggedIn && filter === 'favorite ads') {\n      return null;\n    }\n\n    if (!isLoggedIn && filter === 'my ads') {\n      return null;\n    }\n\n    return (\n      <li key={el}>\n        <Btn to={`/notices/${path}`} onClick={() => handleFilterChange(filter)}>{filter}</Btn>\n      </li>\n    );\n  });\n\n  return <List>{items}</List>;\n};\n\nexport default NoticesCategoriesNav;\n","const { styled } = require('styled-components');\n\nexport const FilterWrapper = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 0;\n  width: 152px;\n\n  padding: 8px;\n  background-color: #ffffff;\n\n  border-radius: 20px;\n  z-index: 10;\n`;\n\nexport const TitleFilters = styled.h2`\n  margin-bottom: 8px;\n\n  text-align: left;\n\n  font-family: var(--main-font);\n  font-weight: 700;\n\n  font-size: 16px;\n  color: var(--btn-bg-color);\n  user-select: none;\n`;\n\nexport const ListFilterGeneralTypes = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const GeneralItemFilterType = styled.li`\n  width: 100%;\n`;\n\nexport const FilterTypeWrapper = styled.div`\n  font-family: var(--secondary-font);\n  font-weight: 400;\n  line-height: 1.3;\n  background-color: var(--labels-bg-color);\n\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nexport const OpenListWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  padding: 14px;\n\n  cursor: pointer;\n`;\n\nexport const TitleFilterType = styled.h3`\n  text-align: left;\n  font-size: 14px;\n  font-weight: 400;\n  color: var(--btn-bg-color);\n  user-select: none;\n`;\n\nexport const ListFilterTypes = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n\n  margin-top: -7px;\n  padding-bottom: 7px;\n`;\n\nexport const ItemFilterType = styled.li`\n  width: 100%;\n`;\n\nexport const LabelcheckBox = styled.label`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  width: 100%;\n\n  padding: 7px 14px;\n\n  gap: 16px;\n  cursor: pointer;\n`;\n\nexport const InputcheckBox = styled.input`\n  display: none;\n`;\n\nexport const FilterNameOfType = styled.p`\n  font-size: 14px;\n  color: var(--btn-bg-color);\n  user-select: none;\n`;\n","import { styled } from 'styled-components';\nimport { IoIosArrowDown } from 'react-icons/io';\n\nexport const ArrowDown = styled(IoIosArrowDown).withConfig({\n  shouldForwardProp: prop => prop !== 'isOpen',\n})`\n  font-size: 20px;\n  fill: var(--btn-bg-color);\n\n  transform: ${({ isOpen }) => (isOpen ? 'rotateX(180deg)' : '')};\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectStatusFilters } from 'redux/notices/noticesSelectors';\nimport { setFilters } from 'redux/notices/noticesSlice';\n\nimport {\n  MdOutlineCheckBoxOutlineBlank,\n  MdOutlineCheckBox,\n} from 'react-icons/md';\n\nimport {\n  OpenListWrapper,\n  FilterNameOfType,\n  FilterTypeWrapper,\n  InputcheckBox,\n  ItemFilterType,\n  LabelcheckBox,\n  ListFilterTypes,\n  TitleFilterType,\n} from 'components/Filters/Filters.styled';\nimport { ArrowDown } from './FiltersByAge.styled';\n\nconst FiltersByAge = ({ setFiltersState }) => {\n  const [isOpenList, setisOpenList] = useState(false);\n  const filters = useSelector(selectStatusFilters);\n\n  const [checksBoxValue, setChecksBoxValue] = useState(filters);\n\n  const dispatch = useDispatch();\n\n  const onGeneralListFilterClick = e => {\n    setisOpenList(!isOpenList);\n  };\n\n  const handleChackBoxChange = e => {\n    const { name } = e.target;\n    const newValue = !checksBoxValue[name];\n    let result = '';\n\n    const ageValues = {\n      less1: '1',\n      moreThen1: '2',\n      moreThen2: '3',\n    };\n\n    Object.keys(checksBoxValue).forEach(elem => {\n      if (name === elem && newValue) {\n        result += ageValues[elem];\n      } else if (checksBoxValue[elem] && name !== elem) {\n        result += ageValues[elem];\n      }\n    });\n\n    if (result === '23') {\n      result = '2';\n    } else if (result === '12' || result === '' || result === '123') {\n      result = '';\n    } else if (result === '13') {\n      result = '4';\n    }\n\n    setChecksBoxValue(prevState => {\n      const newValues = {\n        ...prevState,\n        [name]: newValue,\n      };\n      return newValues;\n    });\n\n    dispatch(\n      setFilters({\n        ...filters,\n        [name]: newValue,\n      })\n    );\n\n    setFiltersState(prevState => ({\n      ...prevState,\n      age: result,\n    }));\n  };\n\n  return (\n    <FilterTypeWrapper>\n      <OpenListWrapper onClick={onGeneralListFilterClick}>\n        <ArrowDown isOpen={isOpenList} />\n        <TitleFilterType>By age</TitleFilterType>\n      </OpenListWrapper>\n\n      {isOpenList && (\n        <ListFilterTypes>\n          <ItemFilterType>\n            <LabelcheckBox htmlFor=\"less1\">\n              {checksBoxValue.less1 ? (\n                <MdOutlineCheckBox fontSize=\"20\" fill=\"#54ADFF\" />\n              ) : (\n                <MdOutlineCheckBoxOutlineBlank fontSize=\"20\" fill=\"#54ADFF\" />\n              )}\n              <FilterNameOfType>3-12 m</FilterNameOfType>\n            </LabelcheckBox>\n            <InputcheckBox\n              type=\"checkbox\"\n              id=\"less1\"\n              name=\"less1\"\n              value={checksBoxValue.less1}\n              onChange={handleChackBoxChange}\n            />\n          </ItemFilterType>\n          <ItemFilterType>\n            <LabelcheckBox htmlFor=\"moreThen1\">\n              {checksBoxValue.moreThen1 ? (\n                <MdOutlineCheckBox fontSize=\"20\" fill=\"#54ADFF\" />\n              ) : (\n                <MdOutlineCheckBoxOutlineBlank fontSize=\"20\" fill=\"#54ADFF\" />\n              )}\n              <FilterNameOfType>up to 1 year</FilterNameOfType>\n            </LabelcheckBox>\n            <InputcheckBox\n              type=\"checkbox\"\n              id=\"moreThen1\"\n              name=\"moreThen1\"\n              value={checksBoxValue.moreThen1}\n              onChange={handleChackBoxChange}\n            />\n          </ItemFilterType>\n          <ItemFilterType>\n            <LabelcheckBox htmlFor=\"moreThen2\">\n              {checksBoxValue.moreThen2 ? (\n                <MdOutlineCheckBox fontSize=\"20\" fill=\"#54ADFF\" />\n              ) : (\n                <MdOutlineCheckBoxOutlineBlank fontSize=\"20\" fill=\"#54ADFF\" />\n              )}\n              <FilterNameOfType>up to 2 year</FilterNameOfType>\n            </LabelcheckBox>\n            <InputcheckBox\n              type=\"checkbox\"\n              id=\"moreThen2\"\n              name=\"moreThen2\"\n              value={checksBoxValue.moreThen2}\n              onChange={handleChackBoxChange}\n            />\n          </ItemFilterType>\n        </ListFilterTypes>\n      )}\n    </FilterTypeWrapper>\n  );\n};\n\nexport default FiltersByAge;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectStatusFilters } from 'redux/notices/noticesSelectors';\nimport { setFilters } from 'redux/notices/noticesSlice';\n\nimport {\n  MdOutlineCheckBox,\n  MdOutlineCheckBoxOutlineBlank,\n} from 'react-icons/md';\n\nimport {\n  FilterNameOfType,\n  FilterTypeWrapper,\n  InputcheckBox,\n  ItemFilterType,\n  LabelcheckBox,\n  ListFilterTypes,\n  OpenListWrapper,\n  TitleFilterType,\n} from 'components/Filters/Filters.styled';\nimport { ArrowDown } from 'components/FiltersByAge/FiltersByAge.styled';\n\nconst FiltersByGender = ({ setFiltersState }) => {\n  const [isOpenList, setisOpenList] = useState(false);\n\n  const filters = useSelector(selectStatusFilters);\n  const [checksBoxValue, setChecksBoxValue] = useState(filters);\n\n  const dispatch = useDispatch();\n\n  const onGeneralListFilterClick = e => {\n    setisOpenList(!isOpenList);\n  };\n\n  const handleChackBoxChange = e => {\n    const { name } = e.target;\n    let result = '';\n\n    const newValue = !checksBoxValue[name];\n    const { male, female } = checksBoxValue;\n\n    if (newValue && !male && !female) {\n      result = name;\n    } else if (!newValue && female && male && name === 'female') {\n      result = 'male';\n    } else if (!newValue && female && male && name === 'male') {\n      result = 'female';\n    } else {\n      result = '';\n    }\n\n    setChecksBoxValue(prevState => {\n      const newValues = {\n        ...prevState,\n        [name]: newValue,\n      };\n\n      return newValues;\n    });\n\n    dispatch(\n      setFilters({\n        ...filters,\n        [name]: newValue,\n      })\n    );\n\n    setFiltersState(prevState => ({\n      ...prevState,\n      sex: result,\n    }));\n  };\n\n  return (\n    <FilterTypeWrapper>\n      <OpenListWrapper onClick={onGeneralListFilterClick}>\n        <ArrowDown isOpen={isOpenList} />\n        <TitleFilterType>By gender</TitleFilterType>\n      </OpenListWrapper>\n      {isOpenList && (\n        <ListFilterTypes>\n          <ItemFilterType>\n            <LabelcheckBox htmlFor=\"female\">\n              {checksBoxValue.female ? (\n                <MdOutlineCheckBox fontSize=\"20\" fill=\"#54ADFF\" />\n              ) : (\n                <MdOutlineCheckBoxOutlineBlank fontSize=\"20\" fill=\"#54ADFF\" />\n              )}\n              <FilterNameOfType>female</FilterNameOfType>\n            </LabelcheckBox>\n            <InputcheckBox\n              type=\"checkbox\"\n              id=\"female\"\n              name=\"female\"\n              value={checksBoxValue.female}\n              onChange={handleChackBoxChange}\n            />\n          </ItemFilterType>\n          <ItemFilterType>\n            <LabelcheckBox htmlFor=\"male\">\n              {checksBoxValue.male ? (\n                <MdOutlineCheckBox fontSize=\"20\" fill=\"#54ADFF\" />\n              ) : (\n                <MdOutlineCheckBoxOutlineBlank fontSize=\"20\" fill=\"#54ADFF\" />\n              )}\n              <FilterNameOfType>male</FilterNameOfType>\n            </LabelcheckBox>\n            <InputcheckBox\n              type=\"checkbox\"\n              id=\"male\"\n              name=\"male\"\n              value={checksBoxValue.male}\n              onChange={handleChackBoxChange}\n            />\n          </ItemFilterType>\n        </ListFilterTypes>\n      )}\n    </FilterTypeWrapper>\n  );\n};\n\nexport default FiltersByGender;\n","import FiltersByAge from 'components/FiltersByAge/FiltersByAge';\nimport FiltersByGender from 'components/FiltersByGender/FiltersByGender';\n\nimport {\n  FilterWrapper,\n  GeneralItemFilterType,\n  ListFilterGeneralTypes,\n  TitleFilters,\n} from './Filters.styled';\n\nconst Filters = ({ setFiltersState }) => {\n  return (\n    <FilterWrapper>\n      <TitleFilters>Filters</TitleFilters>\n      <ListFilterGeneralTypes>\n        <GeneralItemFilterType>\n          <FiltersByAge setFiltersState={setFiltersState} />\n        </GeneralItemFilterType>\n\n        <GeneralItemFilterType>\n          <FiltersByGender setFiltersState={setFiltersState} />\n        </GeneralItemFilterType>\n      </ListFilterGeneralTypes>\n    </FilterWrapper>\n  );\n};\n\nexport default Filters;\n","import styled from 'styled-components';\n\nimport { CiFilter } from 'react-icons/ci';\n\nconst BtnFilterWrapper = styled.div`\n  position: relative;\n`;\n\nconst FilterBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  width: 40px;\n  height: 40px;\n  padding: 9px 8px 7px;\n  color: var(--btn-bg-color);\n  font-weight: 700;\n\n  background: var(--labels-bg-color);\n  border: none;\n  border-radius: 50%;\n\n  transition: color var(--duration) var(--cubic),\n    background var(--duration) var(--cubic);\n\n  &:hover,\n  &:focus {\n    color: var(--label-active-color);\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    min-width: 152px;\n\n    background: transparent;\n    border-width: 2px;\n    border-color: var(--btn-bg-color);\n    border-style: solid;\n    border-radius: 40px;\n\n    font-size: 16px;\n  }\n`;\n\nconst FilterIcon = styled(CiFilter)`\n  fill: var(--btn-bg-color);\n  width: 24px;\n  height: 24px;\n  stroke-width: 0.5;\n  transition: fill var(--duration) var(--cubic);\n\n  &:hover,\n  &:focus {\n    fill: var(--label-active-color);\n  }\n`;\n\nexport { BtnFilterWrapper, FilterBtn, FilterIcon };\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useWindowSize } from 'hooks/useResize';\nimport { getNoticesByFilter } from 'redux/notices/noticesOperations';\n\nimport Filters from 'components/Filters/Filters';\nimport {\n  BtnFilterWrapper,\n  FilterBtn,\n  FilterIcon,\n} from './NoticesFilters.styled';\n\nconst NoticesFilters = () => {\n  const [screenWidth] = useWindowSize();\n  const [isOpenFilter, setIsOpenFilter] = useState(false);\n\n  const [filtersState, setFiltersState] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (Object.keys(filtersState).length === 0) {\n      return;\n    }\n    dispatch(getNoticesByFilter(filtersState));\n  }, [dispatch, filtersState]);\n\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    const handleOutsideClick = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpenFilter(false);\n      }\n    };\n    document.addEventListener('click', handleOutsideClick);\n\n    return () => {\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, []);\n\n  const onFilterClick = e => {\n    setIsOpenFilter(!isOpenFilter);\n  };\n\n  return (\n    <BtnFilterWrapper ref={dropdownRef}>\n      <FilterBtn\n        id=\"filtersBtn\"\n        type=\"button\"\n        name=\"filterBtn\"\n        aria-label=\"Show filters\"\n        onClick={onFilterClick}\n      >\n        {screenWidth >= 768 && 'Filter'} <FilterIcon name=\"filterBtnIcon\" />\n      </FilterBtn>\n      {isOpenFilter && <Filters setFiltersState={setFiltersState} />}\n    </BtnFilterWrapper>\n  );\n};\n\nexport default NoticesFilters;\n","import styled from 'styled-components';\n\nimport { RxCross1 } from 'react-icons/rx';\nimport { CiSearch } from 'react-icons/ci';\n\nconst Form = styled.form`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 0 auto;\n  margin-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    margin-top: 40px;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  max-height: 44px;\n\n  padding-top: 14px;\n  padding-bottom: 13px;\n  padding-left: 20px;\n\n  color: var(--text-input-color);\n\n  background-color: #fff;\n  border-radius: 24px;\n  border: none;\n  outline: none;\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n\n  transition: box-shadow var(--duration) var(--cubic);\n\n  &:focus,\n  &:hover {\n    box-shadow: 7px 13px 14px 0px rgba(116, 177, 232, 0.24);\n  }\n\n  &::placeholder {\n    font-size: 14px;\n    font-style: var(--secondary-font);\n  }\n`;\n\nconst SubmitBtn = styled.button.withConfig({\n  shouldForwardProp: prop => prop !== 'query',\n})`\n  position: absolute;\n  top: 10px;\n  right: 20px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  border: none;\n\n  transform: ${({ query }) => query && 'translateX(-27px)'};\n\n  transition: transform var(--duration) var(--cubic);\n`;\n\nconst SearchIco = styled(CiSearch)`\n  color: var(--btn-bg-color);\n  width: 24px;\n  height: 24px;\n  stroke-width: 0.35;\n`;\n\nconst ClearBtn = styled(SubmitBtn).withConfig({\n  shouldForwardProp: prop => prop !== 'query',\n})`\n  right: 13px;\n\n  transform: translateX(0);\n  opacity: ${({ query }) => (query ? 1 : 0)};\n\n  transition: opacity var(--duration) var(--cubic);\n`;\n\nconst CrossSmall = styled(RxCross1)`\n  color: var(--header-items-color);\n  width: 24px;\n  height: 24px;\n`;\n\nexport { Form, Input, SubmitBtn, ClearBtn, SearchIco, CrossSmall };\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Form,\n  Input,\n  SubmitBtn,\n  ClearBtn,\n  SearchIco,\n  CrossSmall,\n} from './NoticesSearch.styled';\nimport {\n  // fetchNotices,\n  getNoticesBySearch,\n  getNoticesByCategory,\n} from 'redux/notices/noticesOperations';\nimport { getNews } from 'redux/news/newsOperations';\nimport { useParams } from 'react-router';\n\nconst NoticesSearch = ({ handleSearch }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const [query, setQuery] = useState('');\n\n  const { categoryName } = useParams();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const searchQuery = e.currentTarget.elements.query.value;\n    if (location.pathname === '/news') {\n      handleSearch(searchQuery);\n      // dispatch(getNews(`?title=${searchQuery}&page=1&limit=9`));\n    } else\n      dispatch(\n        getNoticesBySearch({\n          category: categoryName,\n          input: searchQuery,\n        })\n      );\n  };\n\n  const onInputChange = e => {\n    const searchQuery = e.target.value;\n    setQuery(searchQuery);\n  };\n  const handleClear = () => {\n    setQuery('');\n    if (location.pathname === '/news') dispatch(getNews(`?page=${1}&limit=9`));\n    else dispatch(getNoticesByCategory(`?category=${categoryName}`));\n  };\n\n  return (\n    <Form onSubmit={submitHandler}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        id=\"searchQuery\"\n        placeholder=\"Search\"\n        onChange={onInputChange}\n        value={query}\n      />\n      <SubmitBtn type=\"submit\" aria-label=\"Submit\" query={query}>\n        <SearchIco />\n      </SubmitBtn>\n      <ClearBtn\n        type=\"button\"\n        onClick={handleClear}\n        query={query}\n        aria-label=\"Discard query\"\n      >\n        <CrossSmall />\n      </ClearBtn>\n    </Form>\n  );\n};\n\nexport default NoticesSearch;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding-top: 40px;\n  scroll-behavior: smooth;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 48px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 16px;\n  }\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n\n  margin-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    gap: 80px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0;\n\n    width: 100%;\n  }\n`;\n\nexport { Wrapper, Title, Container, Filters };\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\n\nimport { Toaster } from 'react-hot-toast';\n\nimport AddPetButton from 'components/AddPetButton/AddPetButton';\nimport NoticesCategoriesList from 'components/NoticesCategoriesList/NoticesCategoriesList';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport NoticesFilters from 'components/NoticesFilters/NoticesFilters';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\n\nimport ModalUnauthorized from 'components/ModalUnauthorized/ModalUnauthorized';\n\nimport { Title, Wrapper, Container, Filters } from './Notices.styled';\nimport {\n  // selectFavoriteNotices,\n  selectTotalNotices,\n} from 'redux/notices/noticesSelectors';\nimport Pagination from '@mui/material/Pagination';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\nimport {\n  getNoticesByCategory,\n  getAllOwnNotices,\n  getFavNoticesbyCategory,\n  fetchAllFavNotices,\n} from 'redux/notices/noticesOperations';\nimport { animateScroll as scroll } from 'react-scroll';\n\nimport Loader from 'components/Loader/Loader';\nimport { selectIsLoading } from 'redux/notices/noticesSelectors';\n\nconst Notices = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isLoading = useSelector(selectIsLoading);\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const dispatch = useDispatch();\n  const { categoryName } = useParams();\n\n  const totalPages = useSelector(selectTotalNotices);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleFilterChange = option => {\n    // При зміні фільтрації, змінює сторінку пагінації на 1\n    setCurrentPage(1);\n    scroll.scrollToTop();\n  };\n\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n    scroll.scrollToTop();\n    // код для отримання нових даних, використання фільтрів тощо\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) dispatch(fetchAllFavNotices());\n    if (categoryName !== 'favorite' && categoryName !== 'my-pets') {\n      if (categoryName === 'lost-found' || categoryName === 'for-free') {\n      }\n      dispatch(\n        getNoticesByCategory(`?category=${categoryName}&page=${currentPage}`)\n      );\n    } else if (categoryName === 'favorite' && isLoggedIn) {\n      dispatch(getFavNoticesbyCategory(`?page=${currentPage}`));\n    } else if (categoryName === 'my-pets' && isLoggedIn) {\n      dispatch(getAllOwnNotices(`?page=${currentPage}`));\n    }\n  }, [categoryName, dispatch, isLoggedIn, currentPage]);\n  //\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <Wrapper>\n        <Title>Find your favorite pet</Title>\n        <NoticesSearch />\n        <Filters>\n          <NoticesCategoriesNav onFilterChange={handleFilterChange} />\n          <Container>\n            <NoticesFilters />\n            {isLoggedIn ? (\n              <AddPetButton text=\"Add pet\" path=\"/add-pet\" />\n            ) : (\n              <AddPetButton text=\"Add pet\" onClick={handleOpen} />\n            )}\n            {open && (\n              <ModalUnauthorized open={open} handleClose={handleClose} />\n            )}\n          </Container>\n        </Filters>\n        <NoticesCategoriesList />\n\n        <Toaster />\n\n        {totalPages > 8 && (\n          <Pagination\n            count={Math.ceil(totalPages / 8)}\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"primary\"\n            showFirstButton\n            showLastButton\n            // count={totalPages}\n            page={currentPage}\n            onChange={handlePageChange}\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginBottom: '100px',\n            }}\n          />\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Notices;\n"],"names":["Btn","styled","Link","_templateObject","_taggedTemplateLiteral","PlusIcon","BsPlusLg","_templateObject2","PlusIconSmall","BsPlus","_templateObject3","_ref","text","path","onClick","_useWindowSize","useWindowSize","screenWidth","_slicedToArray","_jsxs","to","children","_jsx","filters","filter","NavLink","List","onFilterChange","isLoggedIn","useSelector","selectIsLoggedIn","items","map","_ref2","el","concat","require","FilterWrapper","div","TitleFilters","h2","ListFilterGeneralTypes","ul","GeneralItemFilterType","li","_templateObject4","FilterTypeWrapper","_templateObject5","OpenListWrapper","_templateObject6","TitleFilterType","h3","_templateObject7","ListFilterTypes","_templateObject8","ItemFilterType","_templateObject9","LabelcheckBox","label","_templateObject10","InputcheckBox","input","_templateObject11","FilterNameOfType","p","_templateObject12","ArrowDown","IoIosArrowDown","withConfig","shouldForwardProp","prop","isOpen","setFiltersState","_useState","useState","_useState2","isOpenList","setisOpenList","selectStatusFilters","_useState3","_useState4","checksBoxValue","setChecksBoxValue","dispatch","useDispatch","handleChackBoxChange","e","name","target","newValue","result","ageValues","less1","moreThen1","moreThen2","Object","keys","forEach","elem","prevState","_objectSpread","_defineProperty","setFilters","age","htmlFor","MdOutlineCheckBox","fontSize","fill","MdOutlineCheckBoxOutlineBlank","type","id","value","onChange","male","female","sex","FiltersByAge","FiltersByGender","BtnFilterWrapper","FilterBtn","FilterIcon","CiFilter","isOpenFilter","setIsOpenFilter","filtersState","useEffect","length","getNoticesByFilter","dropdownRef","useRef","handleOutsideClick","event","current","contains","document","addEventListener","removeEventListener","ref","Filters","Form","Input","SubmitBtn","query","SearchIco","CiSearch","ClearBtn","CrossSmall","RxCross1","handleSearch","location","useLocation","setQuery","categoryName","useParams","onSubmit","preventDefault","searchQuery","currentTarget","elements","pathname","getNoticesBySearch","category","placeholder","getNews","getNoticesByCategory","Wrapper","Title","Container","isLoading","selectIsLoading","open","setOpen","totalPages","selectTotalNotices","currentPage","setCurrentPage","fetchAllFavNotices","getFavNoticesbyCategory","getAllOwnNotices","_Fragment","Loader","NoticesSearch","NoticesCategoriesNav","option","scroll","NoticesFilters","AddPetButton","ModalUnauthorized","handleClose","NoticesCategoriesList","Toaster","Pagination","count","Math","ceil","size","variant","color","showFirstButton","showLastButton","page","style","display","justifyContent","alignItems","marginBottom"],"sourceRoot":""}