{"version":3,"file":"static/js/755.fe54e04f.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\n\nexport const Div = styled.div`\n  margin: 0 auto;\n  background-color: white;\n  border: 1px solid rgba(84, 173, 255, 1);\n  box-shadow: rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n  margin-bottom: 100px;\n  box-sizing: border-box;\n\n  width: 280px;\n  padding: 40px 12px;\n\n  h1 {\n    font-family: Manrope;\n    font-size: 24px;\n    font-weight: 500;\n    text-align: center;\n    margin: 0;\n    margin-bottom: 40px;\n  }\n  p {\n    font-family: Manrope;\n    font-weight: 400;\n    font-size: 12px;\n    color: rgba(136, 136, 136, 1);\n    text-align: center;\n  }\n\n  a {\n    font-size: 12px;\n    color: rgba(84, 173, 255, 1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 75px;\n\n    h1 {\n      font-family: Manrope;\n      font-size: 36px;\n      font-weight: 500;\n      text-align: center;\n      margin: 0;\n      margin-bottom: 40px;\n    }\n\n    p {\n      font-family: Manrope;\n      font-weight: 400;\n      font-size: 12px;\n      color: rgba(136, 136, 136, 1);\n      text-align: center;\n    }\n\n    a {\n      font-size: 12px;\n      color: rgba(84, 173, 255, 1);\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 608px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n\n  :not(:last-child) {\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    :not(:last-child) {\n      margin-bottom: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    :not(:last-child) {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const Icon = styled.span`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* width: 24px;\n  height: 24px; */\n  right: 12px;\n  top: 12px;\n  color: rgba(84, 173, 255, 1);\n  cursor: pointer;\n  transition: 250ms;\n`;\n\nexport const InputLine = styled(Field)`\n  font-family: Manrope;\n  position: relative;\n  color: rgba(136, 136, 136, 1);\n  font-size: 16px;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid rgba(84, 173, 255, 1);\n  border-radius: 40px;\n  box-sizing: border-box;\n\n  :focus {\n    outline: 0;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const Btn = styled.button`\n  width: 100%;\n  height: auto;\n  padding: 10px 28px;\n\n  border: none;\n  border-radius: 40px;\n  font-size: 20px;\n  color: #fff;\n  cursor: pointer;\n  background: rgba(84, 173, 255, 1);\n  translate: 0 0;\n\n  ::before {\n    box-sizing: border-box;\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n    border-radius: 40px;\n    opacity: 0;\n    z-index: -1;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  :hover {\n    background: linear-gradient(\n      245deg,\n      rgba(65, 158, 241, 1) 30%,\n      rgba(155, 208, 255, 1)\n    );\n    background-position: 100% 50%;\n  }\n\n  margin-top: 56px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 28px;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 28px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\ncolor: red;\nfont-size: 12px;\nfont-weight: 400;\nmargin-top: 4px;\nmargin-left: 16px;\n\n`","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { useNavigate } from 'react-router';\n\nimport {\n  Div,\n  StyledForm,\n  InputLine,\n  InputContainer,\n  Icon,\n  Btn,\n  Error,\n} from './LoginForm.styled';\n\nimport {\n  MdOutlineVisibilityOff,\n  MdOutlineVisibility,\n  // MdOutlineDone,\n  // RxCross2,\n} from 'react-icons/md';\n\nconst LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required'),\n  });\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      const { email, password } = values;\n      await dispatch(logIn({ email, password }));\n      resetForm();\n      navigate('/user');\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n    setSubmitting(false);\n  };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   dispatch(\n  //     logIn({\n  //       email: form.elements.email.value,\n  //       password: form.elements.password.value,\n  //     })\n  //   );\n  //   form.reset();\n  //   navigate('/user');\n  // };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  return (\n    <>\n      <Div>\n        <h1>Login</h1>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          <StyledForm>\n            <InputContainer>\n              <InputLine\n                id=\"email\"\n                placeholder=\"Email\"\n                variant=\"outlined\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                required\n              />\n              <Error name=\"email\" component=\"span\" />\n            </InputContainer>\n            <InputContainer>\n              <InputLine\n                id=\"password\"\n                placeholder=\"Password\"\n                variant=\"outlined\"\n                name=\"password\"\n                autoComplete=\"off\"\n                type={showPassword ? 'text' : 'password'}\n                required\n              />\n              <Icon\n                onClick={togglePasswordVisibility}\n                style={{ width: '24px', height: '24px' }}\n              >\n                {showPassword ? (\n                  <MdOutlineVisibilityOff />\n                ) : (\n                  <MdOutlineVisibility />\n                )}\n              </Icon>\n              <Error name=\"email\" component=\"span\" />\n            </InputContainer>\n            <Btn type=\"submit\">Login</Btn>\n          </StyledForm>\n        </Formik>\n        <p>\n          Don't have an account? <a href=\"/YourPet/register\">Register</a>\n        </p>\n      </Div>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst Login = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","InputContainer","_templateObject2","Icon","_templateObject3","InputLine","Field","_templateObject4","StyledForm","Form","_templateObject5","Btn","_templateObject6","Error","ErrorMessage","_templateObject7","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","navigate","useNavigate","dispatch","useDispatch","validationSchema","Yup","email","required","password","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","setSubmitting","resetForm","wrap","_context","prev","next","logIn","t0","console","error","stop","_x","_x2","apply","arguments","_jsx","_Fragment","children","_jsxs","Formik","initialValues","onSubmit","id","placeholder","variant","name","type","autoComplete","component","onClick","prevShowPassword","style","width","height","MdOutlineVisibilityOff","MdOutlineVisibility","href","LoginForm"],"sourceRoot":""}